name: macstadium-build-aar

on:
  push:
    branches: [ "main", "develop" ]
    tags:
      - 'v*'
  pull_request:
    branches: [ "main", "develop" ]

env:
  ANDROID_HOME: /Users/administrator/Library/Android/sdk
  PAT_USERNAME: ${{ secrets.PAT_USERNAME }}
  PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

jobs:
  build:
    name: Build SDK AAR
    runs-on: self-hosted

    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: 🔐 Grant execute permission for Gradle wrapper
        run: chmod +x ./gradlew

#      - name: Run unit tests for SDK project with coverage measurement
#        run: ./gradlew clean jacocoDebugCodeCoverage
#      - name: Add coverage results to PR
#        id: jacoco
#        uses: madrapps/jacoco-report@v1.6.1
#        with:
#          paths: |
#            ${{ github.workspace }}/**/sdk/build/reports/jacoco/jacocoDebugCodeCoverage/jacocoDebugCodeCoverage.xml
#          token: ${{ secrets.PAT_TOKEN }}
#          min-coverage-overall: 10
#          min-coverage-changed-files: 0

      - name: 🛠️ Build AAR
        run: ./gradlew clean assembleRelease -Pcloudx.endpoint.config=https://example.com/config.json

#      Removed for now, as we are not publishing to GitHub Packages
#      - name: 📦 Publish to GitHub Packages
#        if: startsWith(github.ref, 'refs/tags/')
#        run: ./gradlew publish -Pcloudx.endpoint.config=https://example.com/config.json
#        env:
#          PAT_USERNAME: ${{ secrets.PAT_USERNAME }}
#          PAT_TOKEN: ${{ secrets.PAT_TOKEN }}

      - name: 🕵️ Log Maven Central and GPG Secrets (partially)
        run: |
          echo "🔐 mavenCentralUsername: ${ORG_GRADLE_PROJECT_mavenCentralUsername:0:4}"
          echo "🔐 mavenCentralPassword is set: [${#ORG_GRADLE_PROJECT_mavenCentralPassword}] characters"
          echo "🔏 signingInMemoryKey is set: $([ -z \"$ORG_GRADLE_PROJECT_signingInMemoryKey\" ] && echo '❌ NO' || echo '✅ YES')"
          echo "🔏 signingInMemoryKeyPassword is set: $([ -z \"$ORG_GRADLE_PROJECT_signingInMemoryKeyPassword\" ] && echo '❌ NO' || echo '✅ YES')"
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyPassword }}

      - name: 📦 Publish to Maven Central
        if: startsWith(github.ref, 'refs/tags/')
        run: ./gradlew publishToMavenCentral --no-daemon --stacktrace -Pcloudx.endpoint.config=https://example.com/config.json
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyPassword }}


      - name: 📦 Upload AAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: cloudx-sdk-aar
          path: build/outputs/aar/*.aar

      - name: 🔍 Show current directory structure
        run: |
          echo "📁 Current path: $(pwd)"
          echo "📂 Top-level contents:"
          ls -la
          echo "📂 SDK build/outputs structure:"
          ls -la build/outputs || true
          echo "📂 AAR files:"
          ls -la build/outputs/aar || true

      - name: 🚀 Create GitHub Release with AAR
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: build/outputs/aar/*.aar
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_TOKEN }}
