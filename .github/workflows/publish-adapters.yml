name: 🚀 Publish CloudX Module

on:
  push:
    tags:
      - 'v-*'

env:
  ANDROID_HOME: /Users/administrator/Library/Android/sdk

jobs:
  determine-module:
    runs-on: self-hosted
    outputs:
      module: ${{ steps.select-module.outputs.module }}
      path: ${{ steps.select-module.outputs.path }}
      tagPrefix: ${{ steps.select-module.outputs.tagPrefix }}
      artifactName: ${{ steps.select-module.outputs.artifactName }}
    steps:
      - name: 🏷 Select module based on tag
        id: select-module
        run: |
          if [[ "${{ github.ref_name }}" == v-adapter-cloudx-* ]]; then
            echo "module=adapter-cloudx" >> $GITHUB_OUTPUT
            echo "path=adapter-cloudx" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-cloudx-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-cloudx-release.aar" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-meta-* ]]; then
            echo "module=adapter-meta" >> $GITHUB_OUTPUT
            echo "path=adapter-meta" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-meta-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-meta-release.aar" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-google-* ]]; then
            echo "module=adapter-google" >> $GITHUB_OUTPUT
            echo "path=adapter-google" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-google-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-google-release.aar" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-mintegral-* ]]; then
            echo "module=adapter-mintegral" >> $GITHUB_OUTPUT
            echo "path=adapter-mintegral" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-mintegral-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-mintegral-release.aar" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-testbidder-* ]]; then
            echo "module=adapter-testbidder" >> $GITHUB_OUTPUT
            echo "path=adapter-testbidder" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-testbidder-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-testbidder-release.aar" >> $GITHUB_OUTPUT
          else
            echo "No matching module for tag ${{ github.ref_name }}. Skipping..."
            echo "module=" >> $GITHUB_OUTPUT
            exit 0
          fi

  publish:
    needs: determine-module
    runs-on: self-hosted
    if: ${{ needs.determine-module.outputs.module != '' }}
    name: 📦 Publish ${{ needs.determine-module.outputs.module }}
    steps:
      - name: 🧾 Checkout code
        uses: actions/checkout@v4

      - name: ☕ Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: 🔐 Make Gradle executable
        run: chmod +x ./gradlew

      - name: 🛠 Build Release AAR
        run: ./gradlew :${{ needs.determine-module.outputs.path }}:assembleRelease -PuseRemoteSdk=true

      - name: 📦 Publish to Maven Central
        run: ./gradlew :${{ needs.determine-module.outputs.path }}:publishToMavenCentral --no-daemon --stacktrace -PuseRemoteSdk=true
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyPassword }}

      - name: 📤 Upload AAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.determine-module.outputs.artifactName }}
          path: ${{ needs.determine-module.outputs.path }}/build/outputs/aar/${{ needs.determine-module.outputs.artifactName }}

      - name: 🚀 Create GitHub Release with AAR
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          files: ${{ needs.determine-module.outputs.path }}/build/outputs/aar/${{ needs.determine-module.outputs.artifactName }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}