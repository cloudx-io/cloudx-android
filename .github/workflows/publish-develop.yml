name: üì¶ Publish Develop to GitHub Packages

on:
  push:
    branches:
      - develop

env:
  ANDROID_HOME: /Users/administrator/Library/Android/sdk

jobs:
  publish-develop:
    runs-on: self-hosted
    name: üì¶ Publish SDK + Adapters to GitHub Packages (develop)
    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: üîê Make Gradle executable
        run: chmod +x ./gradlew

      - name: üèóÔ∏è Compute version
        id: version
        run: |
          BASE_VERSION=$(grep "cloudx.version.base" gradle.properties | cut -d'=' -f2)
          COMMIT_SHA=$(git rev-parse --short=7 HEAD)
          VERSION="$BASE_VERSION-dev.${{ github.run_number }}+$COMMIT_SHA"
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "üì¶ Publishing version: $VERSION"

      - name: üß™ Run SDK Tests
        run: ./gradlew :sdk:test -Pversion=${{ steps.version.outputs.version }}

      - name: üìä Upload Test Reports
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-reports-develop-${{ github.run_number }}
          path: |
            sdk/build/reports/tests/
            sdk/build/test-results/

      - name: üõ†Ô∏è Build Release AARs
        run: |
          ./gradlew :sdk:assembleRelease -Pcloudx.endpoint.config=https://example.com/config.json -Pversion=${{ steps.version.outputs.version }}
          ./gradlew :adapter-cloudx:assembleRelease -Pversion=${{ steps.version.outputs.version }}
          ./gradlew :adapter-meta:assembleRelease -Pversion=${{ steps.version.outputs.version }}

      - name: üì¶ Publish to GitHub Packages
        run: |
          ./gradlew :sdk:publishAllPublicationsToGitHubPackagesRepository --no-daemon --stacktrace -Pcloudx.endpoint.config=https://example.com/config.json -Pversion=${{ steps.version.outputs.version }}
          ./gradlew :adapter-cloudx:publishAllPublicationsToGitHubPackagesRepository --no-daemon --stacktrace -Pversion=${{ steps.version.outputs.version }}
          ./gradlew :adapter-meta:publishAllPublicationsToGitHubPackagesRepository --no-daemon --stacktrace -Pversion=${{ steps.version.outputs.version }}
        env:
          GITHUB_ACTOR: ${{ github.actor }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: üì§ Upload AAR Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: develop-aars-${{ github.run_number }}
          path: |
            sdk/build/outputs/aar/sdk-release.aar
            adapter-cloudx/build/outputs/aar/adapter-cloudx-release.aar
            adapter-meta/build/outputs/aar/adapter-meta-release.aar

      - name: üì¢ Slack Notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: custom
          custom_payload: |
            {
              "text": "üì¶ CloudX Develop Publishing #${{ github.run_number }} finished",
              "attachments": [{
                "author_name": "cloudexchange.android.sdk/publish-develop",
                "fallback": "Develop publishing pipeline finished",
                "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                "fields": [
                  {
                    "title": "Status",
                    "value": "${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}",
                    "short": true
                  },
                  {
                    "title": "Version",
                    "value": "`${{ steps.version.outputs.version }}`",
                    "short": true
                  },
                  {
                    "title": "Commit",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/commit/${{ github.sha }}|${{ github.sha }}>",
                    "short": true
                  },
                  {
                    "title": "Branch",
                    "value": "`develop`",
                    "short": true
                  },
                  {
                    "title": "Published To",
                    "value": "${{ job.status == 'success' && 'üì¶ GitHub Packages (internal use)' || '‚ùå Publishing failed' }}",
                    "short": false
                  },
                  {
                    "title": "Pipeline Log",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Pipeline Log>",
                    "short": true
                  },
                  {
                    "title": "Artifacts",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Download AARs>",
                    "short": true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.CLOUDX_ALERTS_MOBILE_SLACK }}
