name: üöÄ Publish CloudX Adapters to MC

on:
  push:
    tags:
      - 'v-adapter-*'

env:
  ANDROID_HOME: /Users/administrator/Library/Android/sdk

jobs:
  determine-module:
    runs-on: self-hosted
    outputs:
      module: ${{ steps.select-module.outputs.module }}
      path: ${{ steps.select-module.outputs.path }}
      tagPrefix: ${{ steps.select-module.outputs.tagPrefix }}
      artifactName: ${{ steps.select-module.outputs.artifactName }}
      version: ${{ steps.select-module.outputs.version }}
      publishAll: ${{ steps.select-module.outputs.publishAll }}
    steps:
      - name: üè∑ Select module based on tag
        id: select-module
        run: |
          if [[ "${{ github.ref_name }}" == v-adapter-cloudx-* ]]; then
            echo "module=adapter-cloudx" >> $GITHUB_OUTPUT
            echo "path=adapter-cloudx" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-cloudx-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-cloudx-release.aar" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF_NAME#v-adapter-cloudx-}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-meta-* ]]; then
            echo "module=adapter-meta" >> $GITHUB_OUTPUT
            echo "path=adapter-meta" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-meta-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-meta-release.aar" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF_NAME#v-adapter-meta-}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-google-* ]]; then
            echo "module=adapter-google" >> $GITHUB_OUTPUT
            echo "path=adapter-google" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-google-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-google-release.aar" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF_NAME#v-adapter-google-}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-mintegral-* ]]; then
            echo "module=adapter-mintegral" >> $GITHUB_OUTPUT
            echo "path=adapter-mintegral" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-mintegral-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-mintegral-release.aar" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF_NAME#v-adapter-mintegral-}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-testbidder-* ]]; then
            echo "module=adapter-testbidder" >> $GITHUB_OUTPUT
            echo "path=adapter-testbidder" >> $GITHUB_OUTPUT
            echo "tagPrefix=v-adapter-testbidder-" >> $GITHUB_OUTPUT
            echo "artifactName=adapter-testbidder-release.aar" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF_NAME#v-adapter-testbidder-}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.ref_name }}" == v-adapter-all-* ]]; then
            echo "publishAll=true" >> $GITHUB_OUTPUT
            echo "version=${GITHUB_REF_NAME#v-adapter-all-}" >> $GITHUB_OUTPUT
            echo "module=" >> $GITHUB_OUTPUT
          else
            echo "No matching module for tag ${{ github.ref_name }}. Skipping..."
            echo "module=" >> $GITHUB_OUTPUT
            echo "publishAll=false" >> $GITHUB_OUTPUT
            exit 0
          fi

  publish:
    needs: determine-module
    runs-on: self-hosted
    if: ${{ needs.determine-module.outputs.module != '' }}
    name: üì¶ Publish ${{ needs.determine-module.outputs.module }}
    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: üîê Make Gradle executable
        run: chmod +x ./gradlew

      - name: üõ† Build Release AAR
        run: ./gradlew :${{ needs.determine-module.outputs.path }}:assembleRelease -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}

      - name: üì¶ Publish to Maven Central
        run: ./gradlew :${{ needs.determine-module.outputs.path }}:publishToMavenCentral --no-daemon --stacktrace -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyPassword }}

      - name: üì§ Upload AAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ needs.determine-module.outputs.artifactName }}
          path: ${{ needs.determine-module.outputs.path }}/build/outputs/aar/${{ needs.determine-module.outputs.artifactName }}

      - name: üì¢ Slack Notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: custom
          custom_payload: |
            {
              "text": "üöÄ CloudX Adapter Publishing #${{ github.run_number }} finished",
              "attachments": [{
                "author_name": "cloudexchange.android.sdk/publish-adapters",
                "fallback": "Adapter publishing pipeline finished",
                "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                "fields": [
                  {
                    "title": "Status",
                    "value": "${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}",
                    "short": true
                  },
                  {
                    "title": "Adapter",
                    "value": "`${{ needs.determine-module.outputs.module }}`",
                    "short": true
                  },
                  {
                    "title": "Version",
                    "value": "`${{ needs.determine-module.outputs.version }}`",
                    "short": true
                  },
                  {
                    "title": "Tag",
                    "value": "`${{ github.ref_name }}`",
                    "short": true
                  },
                  {
                    "title": "Maven Central",
                    "value": "${{ job.status == 'success' && 'üì§ Uploaded to Maven Central (~30 min to publish)' || '‚ùå Upload failed' }}",
                    "short": false
                  },
                  {
                    "title": "Pipeline Log",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Pipeline Log>",
                    "short": true
                  },
                  {
                    "title": "Artifacts",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Download AAR>",
                    "short": true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.CLOUDX_ALERTS_MOBILE_SLACK }}

#      - name: üöÄ Create GitHub Release with AAR
#        uses: softprops/action-gh-release@v1
#        with:
#          name: Release ${{ github.ref_name }}
#          tag_name: ${{ github.ref_name }}
#          files: ${{ needs.determine-module.outputs.path }}/build/outputs/aar/${{ needs.determine-module.outputs.artifactName }}
#        env:
#          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  publish-all:
    needs: determine-module
    runs-on: self-hosted
    if: ${{ needs.determine-module.outputs.publishAll == 'true' }}
    name: üì¶ Publish All Adapters
    steps:
      - name: üßæ Checkout code
        uses: actions/checkout@v4

      - name: ‚òï Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: üîê Make Gradle executable
        run: chmod +x ./gradlew

      - name: üõ† Build All Adapter Release AARs
        run: |
          ./gradlew :adapter-cloudx:assembleRelease -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-google:assembleRelease -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-meta:assembleRelease -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-mintegral:assembleRelease -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-testbidder:assembleRelease -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}

      - name: üì¶ Publish All Adapters to Maven Central
        run: |
          ./gradlew :adapter-cloudx:publishToMavenCentral --no-daemon --stacktrace -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-google:publishToMavenCentral --no-daemon --stacktrace -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-meta:publishToMavenCentral --no-daemon --stacktrace -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-mintegral:publishToMavenCentral --no-daemon --stacktrace -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
          ./gradlew :adapter-testbidder:publishToMavenCentral --no-daemon --stacktrace -PuseRemoteSdk=true -Pversion=${{ needs.determine-module.outputs.version }}
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyPassword }}

      - name: üì§ Upload All AAR Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: all-adapters-${{ needs.determine-module.outputs.version }}
          path: |
            adapter-cloudx/build/outputs/aar/adapter-cloudx-release.aar
            adapter-google/build/outputs/aar/adapter-google-release.aar
            adapter-meta/build/outputs/aar/adapter-meta-release.aar
            adapter-mintegral/build/outputs/aar/adapter-mintegral-release.aar
            adapter-testbidder/build/outputs/aar/adapter-testbidder-release.aar

      - name: üì¢ Slack Notification
        uses: 8398a7/action-slack@v3
        if: always()
        with:
          status: custom
          custom_payload: |
            {
              "text": "üöÄ CloudX All Adapters Publishing #${{ github.run_number }} finished",
              "attachments": [{
                "author_name": "cloudexchange.android.sdk/publish-adapters",
                "fallback": "All adapters publishing pipeline finished",
                "color": "${{ job.status == 'success' && 'good' || 'danger' }}",
                "fields": [
                  {
                    "title": "Status",
                    "value": "${{ job.status == 'success' && '‚úÖ Success' || '‚ùå Failed' }}",
                    "short": true
                  },
                  {
                    "title": "Adapters",
                    "value": "All CloudX Adapters (cloudx, google, meta, mintegral, testbidder)",
                    "short": true
                  },
                  {
                    "title": "Version",
                    "value": "`${{ needs.determine-module.outputs.version }}`",
                    "short": true
                  },
                  {
                    "title": "Tag",
                    "value": "`${{ github.ref_name }}`",
                    "short": true
                  },
                  {
                    "title": "Maven Central",
                    "value": "${{ job.status == 'success' && 'üì§ All adapters uploaded to Maven Central (~30 min to publish)' || '‚ùå Upload failed' }}",
                    "short": false
                  },
                  {
                    "title": "Pipeline Log",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|View Pipeline Log>",
                    "short": true
                  },
                  {
                    "title": "Artifacts",
                    "value": "<${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}|Download All AARs>",
                    "short": true
                  }
                ]
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.CLOUDX_ALERTS_MOBILE_SLACK }}